service: cinetry-api
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs16.x
  stage: dev
  region: eu-west-1
  timeout: 29
  iamRoleStatements:
    - Effect: 'Allow'
      Action:
        - 'lambda:InvokeFunction'
        - 'lambda:InvokeAsync'
        - 'logs:CreateLogGroup'
        - 'logs:CreateLogStream'
        - 'logs:PutLogEvents'
        - 'ssm:*'
      Resource:
        - '*'
  environment:
    PG_HOST: ${ssm:/${opt:stage, self:provider.stage}/lambda/common/PG_HOST}
    PG_USER: ${ssm:/${opt:stage, self:provider.stage}/lambda/common/PG_USER}
    PG_PASSWORD: ${ssm:/${opt:stage, self:provider.stage}/lambda/common/PG_PASSWORD}
    PG_PORT: ${ssm:/${opt:stage, self:provider.stage}/lambda/common/PG_PORT}
    PG_DATABASE: ${ssm:/${opt:stage, self:provider.stage}/lambda/common/PG_DATABASE}      
    TMDB_API_KEY: ${ssm:/${opt:stage, self:provider.stage}/lambda/common/TMDB_API_KEY}  
    JWT_SECRET: ${ssm:/${opt:stage, self:provider.stage}/lambda/common/JWT_SECRET}
    CLIENT_ENDPOINT: ${ssm:/${opt:stage, self:provider.stage}/lambda/common/CLIENT_ENDPOINT}

plugins:
  - serverless-localstack

package:
   exclude:
      - .cache/**
      - .cache-demo/**
      - .provision/**
      - .localstack.env
      - docker-compose.*
      - make-env.sh

functions:
  auth:
    handler: src/entry/handler.auth
    events:
      - httpApi:
          path: /auth/{proxy+}
          method: any
  users:
    handler: src/entry/handler.users
    events:
      - httpApi:
          path: /users/{proxy+}
          method: any
  movies:
    handler: src/entry/handler.movies
    events:
      - httpApi:
          path: /movies/{proxy+}
          method: any
  up:
    handler: src/functions/knex.up
    maximumRetryAttempts: 0
  down:
    handler: src/functions/knex.down
    maximumRetryAttempts: 0        

custom:
  localstack:
    debug: true
    stages:
      - local
    lambda:
      mountCode: true
    docker:
      sudo: true